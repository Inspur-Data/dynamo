apiVersion: v1
kind: ServiceAccount
metadata:
  name: profile-sla-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: profile-sla-role
rules:
  # DynamoGraphDeployment custom resources
  - apiGroups: ["nvidia.com"]
    resources: ["dynamographdeployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Core resources needed for deployment management
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list"]
  # Apps resources
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list", "watch"]
  # For port forwarding
  - apiGroups: [""]
    resources: ["pods/portforward"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: profile-sla-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: profile-sla-role
subjects:
- kind: ServiceAccount
  name: profile-sla-sa
---
apiVersion: v1
kind: Pod
metadata:
  name: devcontainer-profile-sla
spec:
  serviceAccountName: profile-sla-sa
  imagePullSecrets:
    - name: docker-imagepullsecret
  securityContext:
    runAsUser: 0  # Run as root
  containers:
  - name: profile-sla
    image: nvcr.io/nvidian/nim-llm-dev/dynamo:latest-sla-planner
    command: ["code-server"]
    env:
      - name: PASSWORD
        value: "password"
    workingDir: /workspace
    ports:
      - containerPort: 8080
        name: code-server
    securityContext:
      privileged: true  # This ensures root access within the container
    resources:
      requests:
        cpu: "10"
        memory: "10Gi"
        nvidia.com/gpu: "1"
      limits:
        cpu: "10"
        memory: "10Gi"
        nvidia.com/gpu: "1" 