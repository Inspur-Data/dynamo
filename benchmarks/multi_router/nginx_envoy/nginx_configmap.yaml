# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-optimized-config
  namespace: ${NAMESPACE}
data:
  nginx.conf: |
    events {
        worker_connections 2048;
        use epoll;
        multi_accept on;
    }

    http {
        # Streaming optimizations
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;

        # Critical: Set buffer sizes to handle large streaming chunks
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 512k;

        # Connection settings optimized for streaming
        keepalive_timeout 65;  # Reasonable keepalive for connection reuse
        keepalive_requests 1000;

        upstream vllm_backend {
            server vllm-agg-router-frontend:8000;
            keepalive 32;  # Connection pooling for efficiency
        }

        server {
            listen 80;

            # Disable all forms of buffering
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;

            location / {
                proxy_pass http://vllm_backend;

                # Use HTTP/1.1 with proper keepalive for streaming
                proxy_http_version 1.1;
                proxy_set_header Connection "";

                # Extended timeouts for long streaming responses
                proxy_read_timeout 1800s;      # 30 minutes for very long streams
                proxy_connect_timeout 30s;
                proxy_send_timeout 120s;       # Extended send timeout

                # Critical: Buffer settings for streaming
                proxy_buffer_size 128k;
                proxy_buffers 4 256k;
                proxy_busy_buffers_size 512k;

                # Force streaming without modification
                proxy_buffering off;
                proxy_cache off;
                proxy_request_buffering off;

                # Essential headers for streaming/SSE
                proxy_set_header Accept-Encoding "";
                proxy_set_header Cache-Control "no-cache";
                proxy_set_header Connection "keep-alive";

                # Critical: Ensure chunked encoding works properly
                chunked_transfer_encoding on;

                # Prevent nginx from trying to read entire response
                proxy_max_temp_file_size 0;

                # Immediately flush responses to client
                proxy_no_cache 1;
                proxy_cache_bypass 1;

                # Pass through streaming headers
                proxy_pass_header Server;
                proxy_pass_header Date;
            }
        }
    }